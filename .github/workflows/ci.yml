# All actions have a name that will be displayed in the "Actions" page in GitHub.
name: CI

# Controls when the action will run.
on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "CUTEst"
  CUTEst:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        #- {
        #    name: "Windows", artifact: "Windows-MinGW.tar.xz",
        #    arch: "pc64.mgw.gfo",
        #    os: windows-latest,
        #    build_type: "Release", cc: "x86_64-w64-mingw32-gcc", cxx: "x86_64-w64-mingw32-g++"
        #  }
        - {
            name: "Ubuntu", artifact: "Linux.tar.xz",
            arch: "pc64.lnx.gfo",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
        - {
            name: "MacOS", artifact: "macOS.tar.xz",
            arch: "mac64.osx.gfo",
            os: macos-latest,
            build_type: "Release", cc: "clang", cxx: "clang++"
          }
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Usually this is always needed
      - uses: actions/checkout@v3

      - name: Install dependencies
        shell: bash
        run: |
          if [[ "${{matrix.config.name}}" == "Ubuntu" ]]; then sudo apt-get install gfortran libblas-dev liblapack-dev libncurses5-dev; fi
          if [[ "${{matrix.config.name}}" == "MacOS" ]]; then brew update; brew install gfortran ncurses; fi
          mkdir -p $HOME/archdefs
          cd $HOME/archdefs
          git clone https://github.com/ralna/ARCHDefs.git
          mkdir -p $HOME/sifdecode
          cd $HOME/sifdecode
          git clone https://github.com/ralna/SIFDecode.git
          mkdir -p $HOME/galahad
          cd $HOME/galahad
          git clone https://github.com/ralna/GALAHAD.git

      - name: Setup
        shell: bash
        run: |
          echo "CUTEST=$(pwd)" >> $GITHUB_ENV
          echo "ARCHDEFS=${HOME}/archdefs/ARCHDefs" >> $GITHUB_ENV
          echo "SIFDECODE=${HOME}/sifdecode/SIFDecode" >> $GITHUB_ENV
          echo "MASTSIF=${HOME}/sifdecode/SIFDecode/sif" >> $GITHUB_ENV
          echo "GALAHAD=${HOME}/galahad/GALAHAD" >> $GITHUB_ENV
          echo "MYARCH=${{matrix.config.arch}}" >> $GITHUB_ENV

      - name: Installation of SIFDecode and CUTEst
        shell: bash
        run: |
          cd $ARCHDEFS
          printf "nn" > sifdecode_cutest.opts
          if [[ "${{matrix.config.name}}" == "Ubuntu" ]];  then printf "4\n1\nn2\nn4\n"  >> sifdecode_cutest.opts; fi
          if [[ "${{matrix.config.name}}" == "MacOS" ]];   then printf "6\nn1\nn3\n"     >> sifdecode_cutest.opts; fi
          if [[ "${{matrix.config.name}}" == "Windows" ]]; then printf "4\n3\nn2\nn4\n"  >> sifdecode_cutest.opts; fi
          printf "nyyyyb" >> sifdecode_cutest.opts
          ./install_optrove < sifdecode_cutest.opts

      - name: Tests
        shell: bash
        run: |
          cd $CUTEST
          ./bin/runcutest -p gen77 -param NN=10 -D LUBRIFC.SIF
          ./bin/runcutest -p genc
          ./bin/runcutest -p gen90
          ./bin/runcutest -p stats
          ./bin/runcutest --single -p gen77
          ./bin/runcutest --single -p genc
          ./bin/runcutest --single -p gen90
          ./bin/runcutest --single -p stats
          ./bin/runcutest -p gen77 -b -lblas -K -llapack -D ROSENBR
          ./bin/runcutest -p gen77 -lblas -D ROSENBR
